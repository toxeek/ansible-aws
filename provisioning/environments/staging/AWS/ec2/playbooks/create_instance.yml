---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: dbserver
      image: ami-e88fcd9f # ubuntu 14.04 
      region: eu-west-1 
      subnet_id: subnet-f6319c92
      keypair: tricky
      count: 1
      env: staging # better pass it to playbook with -e "env=staging"

    # launch instance/s
    tasks:
      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for database servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 92.30.2.128/32
            - proto: tcp
              from_port: 3306
              to_port: 3306
              cidr_ip: 92.30.2.128/32
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0


      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      assign_public_ip=yes
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
                      vpc_subnet_id={{subnet_id}}
        register: ec2

      - name: Add instance to inventory
        local_action: lineinfile 
                      dest="/etc/ansible/inventories/{{ env }}/hosts" 
                      insertafter="[dbservers]" line={{ item.public_ip }}
        with_items: ec2.instances


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: ec2.instances

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: ec2.instances
        args:
          tags:
            Name: dbserver
            env: "{{ env }}"
